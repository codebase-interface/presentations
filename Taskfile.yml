version: '3'

vars:
  PRESENTATIONS_DIR: .
  SERVER_PORT: 8000

tasks:
  install:
    desc: Install dependencies
    cmds:
      - npm install
      - task setup-lib

  serve:
    desc: Start local development server
    cmds:
      - npm run serve
    
  new:
    desc: Create a new presentation (usage - task new -- presentation-slug-name)
    cmds:
      - |
        if [ -z "{{.CLI_ARGS}}" ]; then
          echo "Error: Please provide a presentation name"
          echo "Usage: task new -- my-presentation-name"
          exit 1
        fi
        SLUG="{{.CLI_ARGS}}"
        PRES_DIR="${SLUG}"
        if [ -d "${PRES_DIR}" ]; then
          echo "Error: Presentation '${SLUG}' already exists"
          exit 1
        fi
        mkdir -p "${PRES_DIR}"
        cp -r templates/presentation/* "${PRES_DIR}/"
        sed -i "s/PRESENTATION_TITLE/${SLUG}/g" "${PRES_DIR}/index.html"
        sed -i "s/PRESENTATION_TITLE/${SLUG}/g" "${PRES_DIR}/slides.md"
        echo "‚úÖ Created new presentation: ${SLUG}"
        echo "üìÇ Location: ${PRES_DIR}"
        echo "üåê Will be available at: /${SLUG}/"
      - task: update-index
      - |
        echo ""
        echo "üìã Updated index.html with new presentation"
        echo ""
        echo "Next steps:"
        echo "  1. Edit {{.CLI_ARGS}}/slides.md to add your slides (Markdown format)"
        echo "  2. Run 'task serve' to preview locally"
        echo "  3. View at http://localhost:{{.SERVER_PORT}}/{{.CLI_ARGS}}/"

  list:
    desc: List all presentations
    cmds:
      - |
        echo "Available presentations:"
        # Look for directories that contain index.html and slides.md (presentation indicators)
        # Exclude known non-presentation directories
        found=false
        for dir in */; do
          if [ -d "$dir" ] && [ -f "${dir}index.html" ] && [ -f "${dir}slides.md" ]; then
            name=$(basename "$dir")
            # Skip known system directories
            if [[ "$name" != "lib" && "$name" != "node_modules" && "$name" != ".git" && "$name" != "templates" && "$name" != "scripts" && "$name" != "presentations" ]]; then
              echo "  üìä ${name} - /${name}/"
              found=true
            fi
          fi
        done
        if [ "$found" = false ]; then
          echo "  No presentations found"
        fi

  update-index:
    desc: Update index.html with current presentations list
    cmds:
      - ./scripts/update-index.sh

  setup-lib:
    desc: Set up library files for GitHub Pages deployment
    cmds:
      - mkdir -p lib/reveal.js
      - cp -r node_modules/reveal.js/dist lib/reveal.js/
      - cp -r node_modules/reveal.js/plugin lib/reveal.js/
      - echo "‚úÖ Library files copied to lib/ directory"

  clean:
    desc: Clean generated files
    cmds:
      - npm run clean
      - rm -rf lib

  help:
    desc: Show available commands
    cmds:
      - task --list
